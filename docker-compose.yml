version: '3'

services:
#-----------------------------------#
# PROXY                             #
#-----------------------------------#
  proxy:
    build: ./apps/proxy
    container_name: proxy
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - proxy-certs:/etc/nginx/certs:ro
      - proxy-conf:/etc/nginx/conf.d
      - proxy-vhost:/etc/nginx/vhost.d
      - proxy-html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro


#-----------------------------------#
# LETSENCRYPT                       #
#-----------------------------------#
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - proxy-certs:/etc/nginx/certs
      - proxy-conf:/etc/nginx/conf.d
      - proxy-vhost:/etc/nginx/vhost.d
      - proxy-html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro


#-----------------------------------#
# PLEX                              #
#-----------------------------------#
  plex:
    image: plexinc/pms-docker
    container_name: plex
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    networks:
      - proxy-tier
      - default
    restart: unless-stopped
    volumes:
      - ./apps/plex/config:/config
      - ${STORAGE_PATH}/shares:/data
    tmpfs:
      - /tmp
      - /transcode
    hostname: ${PLEX_HOSTNAME}
    environment:
      - PUID=${DOCKER_USER_ID}
      - PGID=${DOCKER_USER_GROUP_ID}
      - TZ=${TIMEZONE}
      - ADVERTISE_IP=${PLEX_ADVERTISE_IP}
      - VIRTUAL_HOST=${PLEX_HOSTNAME},${PLEX_VIRTUAL_HOST}
      - VIRTUAL_PORT=32400
      - LETSENCRYPT_HOST=${PLEX_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}


#-----------------------------------#
# NEXTCLOUD                         #
#-----------------------------------#
  nextcloud-db:
    image: mariadb
    container_name: nextcloud-db
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - nextcloud-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}

  nextcloud-app:
    build: ./apps/nextcloud/app
    container_name: nextcloud-app
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - nextcloud-core:/var/www/html
      - ./apps/nextcloud/app/apps:/var/www/html/apps
      - ./apps/nextcloud/app/config:/var/www/html/config
      - ./apps/nextcloud/app/themes:/var/www/html/themes
      - ${STORAGE_PATH}/cloud:/var/www/html/data
    environment:
      - MYSQL_HOST=nextcloud-db
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
    depends_on:
      - nextcloud-db
      - redis
      - elasticsearch
    links:
      - nextcloud-db
      - redis
      - elasticsearch

  nextcloud-web:
    build: ./apps/nextcloud/web
    container_name: nextcloud-web
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - nextcloud-core:/var/www/html:ro
      - ./apps/nextcloud/app/apps:/var/www/html/apps:ro
      - ./apps/nextcloud/app/config:/var/www/html/config:ro
      - ./apps/nextcloud/app/themes:/var/www/html/themes:ro
      - ${STORAGE_PATH}/cloud:/var/www/html/data:ro
    environment:
      - VIRTUAL_HOST=${NEXTCLOUD_VIRTUAL_HOST}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${NEXTCLOUD_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - nextcloud-app
      - collabora
    links:
      - nextcloud-app
      - collabora

  nextcloud-cron:
    build: ./apps/nextcloud/app
    container_name: nextcloud-cron
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - nextcloud-core:/var/www/html
      - ./apps/nextcloud/app/apps:/var/www/html/apps
      - ./apps/nextcloud/app/config:/var/www/html/config
      - ./apps/nextcloud/app/themes:/var/www/html/themes
      - ${STORAGE_PATH}/cloud:/var/www/html/data
    user: www-data
    entrypoint: |
      bash -c 'bash -s <<EOF
        trap "break;exit" SIGHUP SIGINT SIGTERM
        while [ ! -f /var/www/html/config/config.php ]; do
          sleep 1
        done
        while true; do
          php -f /var/www/html/cron.php
          sleep 15m
        done
      EOF'
    depends_on:
      - nextcloud-db
      - redis
      - elasticsearch
    links:
      - nextcloud-db
      - redis
      - elasticsearch

  redis:
    image: redis
    container_name: redis
    networks:
      - proxy-tier
    restart: unless-stopped

  collabora:
    image: collabora/code
    container_name: collabora
    cap_add:
      - MKNOD
    networks:
      - proxy-tier
    restart: unless-stopped
    environment:
      - domain=${NEXTCLOUD_VIRTUAL_HOST}

  elasticsearch:
    build: ./apps/nextcloud/elasticsearch
    container_name: elasticsearch
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node


#-----------------------------------#
# HOME ASSISTANT                    #
#-----------------------------------#
  home-assistant:
    image: homeassistant/home-assistant
    container_name: home-assistant
    links:
      - plex
    ports:
      - 8123:8123
    networks:
      - proxy-tier
      - default
    restart: unless-stopped
    volumes:
      - ./apps/home-assistant/config:/config
    environment:
      - TZ=${TIMEZONE}
      - VIRTUAL_HOST=${HOME_ASSISTANT_VIRTUAL_HOST}
      - VIRTUAL_PORT=8123
      - LETSENCRYPT_HOST=${HOME_ASSISTANT_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}


#-----------------------------------#
# HACKMD                            #
#-----------------------------------#
  hackmd-db:
    image: postgres:alpine
    container_name: hackmd-db
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - hackmd-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=hackmd
      - POSTGRES_PASSWORD=${HACKMD_POSTGRES_PASSWORD}
      - POSTGRES_DB=hackmd

  hackmd-app:
    image: hackmdio/hackmd:latest-alpine
    container_name: hackmd-app
    networks:
      - proxy-tier
    restart: unless-stopped
    environment:
      - HMD_DB_URL=postgres://hackmd:${HACKMD_POSTGRES_PASSWORD}@hackmd-db:5432/hackmd
      - HMD_USECDN=false
      - HMD_ALLOW_EMAIL_REGISTER=false
      - HMD_ALLOW_ANONYMOUS=false
      - HMD_ALLOW_PDF_EXPORT=true
      - VIRTUAL_HOST=${HACKMD_VIRTUAL_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${HACKMD_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - hackmd-db
    links:
      - hackmd-db


#-----------------------------------#
# GITEA                             #
#-----------------------------------#
  gitea-app:
    image: gitea/gitea
    container_name: gitea-app
    ports:
      - 222:22
    networks:
      - proxy-tier
      - default
    restart: unless-stopped
    volumes:
      - ./apps/gitea/data:/data
    environment:
      - VIRTUAL_HOST=${GITEA_VIRTUAL_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${GITEA_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - gitea-db
    links:
      - gitea-db

  gitea-db:
    image: mariadb
    container_name: gitea-db
    networks:
      - default
    restart: unless-stopped
    volumes:
      - gitea-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${GITEA_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=gitea
      - MYSQL_USER=gitea
      - MYSQL_PASSWORD=${GITEA_MYSQL_PASSWORD}


volumes:
  nextcloud-db:
  nextcloud-core:
  proxy-certs:
  proxy-conf:
  proxy-vhost:
  proxy-html:
  hackmd-db:
  elasticsearch:
  gitea-db:

networks:
  proxy-tier:
    external:
      name: nginx-proxy
